<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>