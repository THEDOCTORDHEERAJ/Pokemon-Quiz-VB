<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iAiIgf/Z
</value>
  </data>
</root>