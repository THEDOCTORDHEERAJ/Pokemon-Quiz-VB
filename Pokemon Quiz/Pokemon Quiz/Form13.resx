<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zt4cPQAAAABJRU5ErkJggg==
</value>
  </data>
</root>